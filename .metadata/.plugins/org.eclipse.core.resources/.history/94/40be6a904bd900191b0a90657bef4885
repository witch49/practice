package memoization;

import java.util.HashMap;

public class Memoization {
	public static void main(String args[]) {
		long before, after = 0;
		before = System.currentTimeMillis();
		System.out.println(factorial(30));
		System.out.println(factorial(30));

		after = System.currentTimeMillis();
		System.out.println("재귀함수 : " + (after - before) + "ms 걸림");

		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();

		before = System.currentTimeMillis();
		System.out.println(factorialMemoization(30, map));
		System.out.println(factorialMemoization(30, map));

		after = System.currentTimeMillis();

		System.out.println("메모이제이션 : " + (after - before) + "ms 걸림");

		// 재귀 함수를 활용한 factorial 함수
	}

	static int factorial(int number) {
		if (number > 0) {
			return number * factorial(number - 1);
		} else {
			return 1;
		}
	}

	// 메모이제이션을 적용한 factorial 함수
	static int factorialMemoization(int number, HashMap<Integer, Integer> map) {

		if (map.containsKey(number)) {
			return (int) map.get(number);
		} else {

			if (number > 0) {
				int temp = number * factorial(number - 1);
				map.put(number, temp);
				return temp;
			} else {
				return 1;
			}
		}
	}
}